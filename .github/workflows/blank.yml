name: Sync NPC Directory

on:
  workflow_dispatch:    # 支持手动触发

jobs:
  sync-npc:
    runs-on: ubuntu-latest
    steps:
      # 步骤 1：检出目标仓库
      - name: Checkout Target Repository
        uses: actions/checkout@v4
        with:
          repository: a1303045940/package
          token: ${{ secrets.GH_TOKEN }}
          path: target-repo
          ref: main  # 替换为你的目标分支名

      # 步骤 2：获取源目录内容（关键改进）
      - name: Fetch Source Directory
        run: |
          # 创建临时目录并启用稀疏检出
          mkdir -p source-files
          cd source-files
          git init
          git remote add origin https://github.com/sqshanbing/small-package.git
          git config core.sparseCheckout true
          
          # 精确匹配luci-app-npc目录（含子目录）
          echo "luci-app-npc/**" >> .git/info/sparse-checkout
          
          # 浅克隆特定提交
          git pull --depth=1 origin 3cbc43ba94a0f414d34273a207e0c41a2d1d391b

      # 步骤 3：复制文件到新项目目录（核心修改）
      - name: Create and Copy to New Project
        run: |
          SOURCE="source-files/luci-app-npc"
          TARGET="target-repo/luci-app-npc"  # 新项目路径
          
          echo "=== 删除旧目录（若存在）==="
          rm -rf "$TARGET"
          
          echo "=== 创建新项目目录 ==="
          mkdir -p "$TARGET"
          
          echo "=== 复制所有文件（含隐藏文件）==="
          rsync -aAHX --progress --exclude='.git/' "$SOURCE/" "$TARGET/"
          
          echo "=== 验证文件结构 ==="
          ls -la "$TARGET"

      # 步骤 4：提交并推送更改
      - name: Commit & Push Changes
        run: |
          cd target-repo
          git config user.name "GitHub Actions Sync"
          git config user.email "actions@users.noreply.github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add luci-app-npc/  # 精确添加新目录
            git commit -m "feat: Create new luci-app-npc project [$(date +'%Y-%m-%d')]"
            git push origin HEAD
          else
            echo "⚠️ 目录无变更，跳过提交"
          fi
